version: "3.2"
services:
  jwt-queries:
    volumes:
      - ./jwt/:/mnt/
    build: ./jwt
    working_dir: /backend/
    env_file:
      - identities.env
    command: sh run.sh

  routes-queries:
    volumes:
      - ./rutas/:/mnt/
      - ./rutas/outputs:/backend/outputs
    build: ./rutas
    working_dir: /backend/
    environment:
      - WORKER_TYPE=FLAKY
    env_file:
      - events.env
      - identities.env
    command: sh run_queries.sh
    depends_on:
      - jwt-queries
      - rabbitmq

  products-queries:
    volumes:
      - ./bodegas/:/mnt/
    build:
      context: ./bodegas
      dockerfile: api.Dockerfile
    working_dir: /backend/
    env_file:
      - identities.env
    command: sh api.sh
    depends_on:
      - jwt-queries

  nginx:
    image: nginx:latest
    ports:
      - 8000:443
    volumes:
      - ./nginx/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/localhost.crt:/etc/ssl/certs/localhost.crt
      - ./nginx/localhost.key:/etc/ssl/private/localhost.key
    depends_on:
      - jwt-queries
      - routes-queries
      - products-queries
      - transport-commands
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  products-events:
    volumes:
      - ./bodegas/:/mnt/
      - ./bodegas/outputs:/backend/outputs
    build:
      context: ./bodegas
      dockerfile: events.Dockerfile
    deploy:
      mode: replicated
    working_dir: /backend/
    env_file:
      - events.env
      - identities.env
    command: sh events.sh
    depends_on:
      - rabbitmq

  transport-commands:
    volumes:
      - ./gestor-transporte/:/mnt/
      - ./gestor-transporte/outputs:/backend/outputs
    build: ./gestor-transporte
    working_dir: /backend/
    env_file:
      - events.env
      - identities.env
    command: sh run_commands.sh
    depends_on:
      - jwt-queries